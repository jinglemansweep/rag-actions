name: "Example Workflow"

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:

jobs:

  ExampleWorkflow:
    runs-on: ubuntu-latest
    steps:

      - name: Checkout
        uses: actions/checkout@v4

      - name: Ingest Skills Directory
        id: ingest_skills
        uses: jinglemansweep/rag-actions/.github/actions/ingest-directory@main
        with:
          openai_api_key: ${{ secrets.OPENAI_API_KEY }}
          supabase_url: ${{ secrets.SUPABASE_URL }}
          supabase_key: ${{ secrets.SUPABASE_KEY }}
          supabase_table: ${{ vars.SUPABASE_TABLE }}
          supabase_collection: "${{ vars.SUPABASE_COLLECTION }}_example"
          ingest_dir: "./test/content/skills/devops"
          ingest_metadata: '{"category": "devops"}'

      - name: Produce RAG Prompt
        id: rag_prompt
        uses: jinglemansweep/rag-actions/.github/actions/query-template@main
        with:
          openai_api_key: ${{ secrets.OPENAI_API_KEY }}
          supabase_url: ${{ secrets.SUPABASE_URL }}
          supabase_key: ${{ secrets.SUPABASE_KEY }}
          supabase_table: ${{ vars.SUPABASE_TABLE }}
          supabase_collection: "${{ vars.SUPABASE_COLLECTION }}_example"
          query_text: "devops"
          top_k: "3"
          template_text: |
            <context>
              {% for doc in docs %}
                <item>
                {{ doc.page_content }}
                </item>
              {% endfor %}
            </context>

      - name: Chat
        id: chat
        uses: jinglemansweep/rag-actions/.github/actions/infer-chat@main
        with:
          openai_api_key: ${{ secrets.OPENAI_API_KEY }}
          supabase_url: ${{ secrets.SUPABASE_URL }}
          supabase_key: ${{ secrets.SUPABASE_KEY }}
          supabase_table: ${{ vars.SUPABASE_TABLE }}
          supabase_collection: "${{ vars.SUPABASE_COLLECTION }}_example"
          prompt_text: |
            ${{ vars.PROMPT_RAG }}
            ${{ steps.rag_prompt.outputs.text }}

      - name: Chat Output
        run: |
          echo "${{ steps.chat.outputs.text }}"
