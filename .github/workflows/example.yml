name: "Example Workflow"

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:

jobs:

  IngestSkills:
    runs-on: ubuntu-latest
    steps:

      - name: Checkout
        uses: actions/checkout@v4

      - name: Ingest Directory
        id: ingest_skills
        uses: jinglemansweep/rag-actions/.github/actions/ingest-directory@main
        with:
          openai_api_key: ${{ secrets.OPENAI_API_KEY }}
          supabase_url: ${{ secrets.SUPABASE_URL }}
          supabase_key: ${{ secrets.SUPABASE_KEY }}
          supabase_table: ${{ vars.SUPABASE_TABLE }}
          supabase_collection: "${{ vars.SUPABASE_COLLECTION }}_example"
          ingest_dir: "./test/content/skills/devops"
          ingest_metadata: '{"category": "devops"}'

  QuerySearchDevOps:
    runs-on: ubuntu-latest
    needs:
      - IngestSkills
    steps:

      - name: Checkout
        uses: actions/checkout@v4

      - name: Query Search
        id: rag_context
        uses: jinglemansweep/rag-actions/.github/actions/query-search@main
        with:
          openai_api_key: ${{ secrets.OPENAI_API_KEY }}
          supabase_url: ${{ secrets.SUPABASE_URL }}
          supabase_key: ${{ secrets.SUPABASE_KEY }}
          supabase_table: ${{ vars.SUPABASE_TABLE }}
          supabase_collection: "${{ vars.SUPABASE_COLLECTION }}_example"
          query_text: "devops"
          top_k: "3"

  InferChat:
    runs-on: ubuntu-latest
    needs:
      - QuerySearchDevOps
    steps:

      - name: Checkout
        uses: actions/checkout@v4

      - name: Infer Chat
        id: chat
        uses: jinglemansweep/rag-actions/.github/actions/infer-chat@main
        with:
          openai_api_key: ${{ secrets.OPENAI_API_KEY }}
          supabase_url: ${{ secrets.SUPABASE_URL }}
          supabase_key: ${{ secrets.SUPABASE_KEY }}
          supabase_table: ${{ vars.SUPABASE_TABLE }}
          supabase_collection: "${{ vars.SUPABASE_COLLECTION }}_example"
          prompt_text: |
            ${{ vars.PROMPT_RAG }}
            ${{ steps.rag_context.outputs.json }}

  ChatOutput:
    runs-on: ubuntu-latest
    needs:
      - InferChat
    steps:

      - name: Output
        run: |
          echo '${{ steps.chat.outputs.json }}'

  QueryTest:
    runs-on: ubuntu-latest
    steps:

      - name: Checkout
        uses: actions/checkout@v4

      - name: Query Test
        id: query_test
        uses: jinglemansweep/rag-actions/.github/actions/query-test@main
        with:
          openai_api_key: ${{ secrets.OPENAI_API_KEY }}
          supabase_url: ${{ secrets.SUPABASE_URL }}
          supabase_key: ${{ secrets.SUPABASE_KEY }}
          supabase_table: ${{ vars.SUPABASE_TABLE }}
          supabase_collection: "${{ vars.SUPABASE_COLLECTION }}_example"
          json: '{"query": "devops"}'
